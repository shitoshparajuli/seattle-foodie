'use client'
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/4JkClsJG211
 */
import { useEffect, useState } from 'react';
import Link from "next/link"
import { CardTitle, CardDescription, CardHeader, CardContent, CardFooter, Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { useRouter, usePathname, useSearchParams } from "next/navigation"
import RestaurantCard from "@/components/card-component" 


export function MainComponent() {

  const router = useRouter();
  const pathname = usePathname();
  const searchParams = useSearchParams();
  const [showSuccessMessage, setShowSuccessMessage] = useState(false);
  const [restaurants, setRestaurants] = useState([

    {
      id: 1,
      name: "The Pink Door",
      location: "Pike Place Market, Seattle",
      imageUrl: "/placeholder.svg",
      dishes: [
        { name: "Lasagna Pink Door", rating: 4.5 },
        { name: "Cioppino", rating: 4 },
        { name: "Tiramisu", rating: 5 }
      ],
      overallRating: 4.5
    },
    {
      id: 2,
      name: "Canlis",
      location: "Queen Anne, Seattle",
      imageUrl: "/placeholder.svg",
      dishes: [
        { name: "Smoked Salmon", rating: 5 },
        { name: "Duck", rating: 4.5 },
        { name: "Crème Brûlée", rating: 4 }
      ],
      overallRating: 4.5
    },
    {
      id: 3,
      name: "The Walrus and the Carpenter",
      location: "Ballard, Seattle",
      imageUrl: "/placeholder.svg",
      dishes: [
        { name: "Oysters", rating: 5 },
        { name: "Steak Tartare", rating: 4 },
        { name: "Bread Pudding", rating: 4.5 }
      ],
      overallRating: 4.5
    }

  ]);

  useEffect(() => {
    if (searchParams.get('success') === 'true') {
      setShowSuccessMessage(true);
      setTimeout(() => setShowSuccessMessage(false), 1000); // Hide after 1 second
    }
  });

  // Separate effect for fetching restaurant data
  useEffect(() => {
    async function fetchRestaurants() {
      // const response = await fetch('https://your-api/endpoint/restaurants');
      // setRestaurants();
    }

    fetchRestaurants();
  }, []); // This effect runs only once on mount

  return (
    <div className="w-full min-h-screen bg-gray-100 dark:bg-gray-900">
      <header className="flex items-center justify-between h-16 px-4 bg-white dark:bg-gray-800 shadow-md">
        <h1 className="text-2xl font-bold text-gray-800 dark:text-gray-200"> The Seattle Foodie</h1>
        
        <nav className="space-x-4">
          <Link className="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200" href="#">
            Home
          </Link>
          <Link className="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200" href="#">
            About
          </Link>
          <Link className="text-gray-600 hover:text-gray-800 dark:text-gray-400 dark:hover:text-gray-200" href="#">
            Contact
          </Link>
        </nav>
      </header>
      <main className="p-4 md:p-6 overflow-y-auto">
      <div className="max-w-3xl mx-auto">
          <input
            className="w-full px-4 py-2 border border-gray-200 border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring focus:ring-blue-400 dark:focus:ring-blue-600 dark:border-gray-800"
            placeholder="Search..."
            type="text"
          />
      </div>

      <div>
        {showSuccessMessage && (
          <div className="rounded-lg border border-gray-200 grid overflow-hidden">
          <div className="p-4">
            <span className="font-medium text-green-500">
              Successfully added
              <CheckIcon className="w-4 h-4 ml-2" />
            </span>
          </div>
        </div>
        )}
      </div>

      <div className="mt-4">
        <h2 className="text-xl font-semibold text-gray-800 dark:text-gray-200 mb-4">My Favorite Restaurants</h2>
      </div>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {restaurants.map(restaurant => (
        <RestaurantCard key={restaurant.id} {...restaurant} />
        ))}          
        
        </div>
        <div className="flex justify-center mt-8">
          <Link href="/create" passHref>
            <Button className="btn btn-primary w-full" >Create New Entry</Button>
          </Link>
        </div>
      </main>
    </div>
  )
}

function CheckIcon(props: React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="20 6 9 17 4 12" />
    </svg>
  )
}

